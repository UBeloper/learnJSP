package com.it.controller;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.it.domain.CartmainVO;
import com.it.domain.CartmemberDTO;
import com.it.domain.CartsubVO;
import com.it.service.CartService;
import com.it.service.MemberService;
import com.it.service.ProductService;

import lombok.Setter;
import lombok.extern.log4j.Log4j;

@Controller
@Log4j
@RequestMapping("/shop/")
public class ShopController {

	@Setter(onMethod_ = @Autowired)
	private ProductService productservice;

	@Setter(onMethod_ = @Autowired)
	private MemberService memberservice;

	@Setter(onMethod_ = @Autowired)
	private CartService cartservice;

	@GetMapping("/list")
	public void list(Model model) {
		model.addAttribute("list", productservice.getList());
	}

	@PostMapping("/cart")
	public String cart(CartsubVO cartsub, HttpSession session) {
		String m_id = (String) session.getAttribute("m_id");
		if (m_id != null) { // 장바구니 처리 진행
			CartmainVO cartmain = new CartmainVO();
			cartmain.setM_id(m_id); // VO에 사용자의 세션정보를 저장
			cartservice.cartInsert(cartmain, cartsub); // 서비스계층 호출
//			log.info(m_id + "님이 로그인 중");
			return "redirect:/shop/cartinfo";
			// redirect -> 컨트롤러로 다시 돌아오라는 뜻

		} else { // 리다이렉션
			return "redirect:/member/login";
//			log.info("로그인 안됨");
		}
	}

	@GetMapping("/cartinfo")
	public String cartinfo(HttpSession session, Model model) {
		// ★ 
		// 어떤건 redirect하고 어떤건 redirect안해도
		// String을 써야한다!
		// 다른 폴더로 가야하는 경우 있으면 절대경로로 써주면 된다.
		
		// 로그인 상태 확인
		String m_id = (String) session.getAttribute("m_id");
		String m_name = (String) session.getAttribute("m_name");
		
		if (m_id != null) {
			// 세션아이디를 이용해서 cm_code를 조회해야 함
			CartmainVO cartmain = new CartmainVO();
			cartmain.setM_id(m_id);
			cartmain = cartservice.readMainID(cartmain);

			if (cartmain != null) {
//				int cm_code = cartmain.getCm_code(); // 로그인 된 사용자의 아이디를 사용하는 cm_code
				// 가방이 파라미터라 뽑아낼 필요 없었는데 함.
				// 장바구니에 내용이 없는 경우.
				log.info("장바구니 내용 있음");

				// cm_code를 이용해서 getListCart 를 조회 -> 뿌려주기
//				cartservice.getListCart(cartmain).forEach(x -> log.info(x)); // 디버깅용
				model.addAttribute("list", cartservice.getListCartDetail(cartmain));
				
				// mapper.xml에 total만 갖고있으므로 이왕 넘기는거 다 불러올 수 있게끔.
				CartmemberDTO cartmember = cartservice.getCartTotal(cartmain);
				cartmember.setCm_code(cartmain.getCm_code());
				cartmember.setM_id(m_id);
				cartmember.setM_name(m_name);
				
				model.addAttribute("cartmember", cartmember);
				
			} else {
				log.info("장바구니 내용 없음");
				
			}

			log.info("로그인 상태 : " + m_id);
//			return "redirect:/shop/cartinfo";
			return "shop/cartinfo"; 
			// 위의 IF문부터 쭉하고 밑에 내려온거니까 REDIRECT하면 또 컨트롤러의 메서드를 훑는거기때문에 부적절
			
		} else {
			log.info("로그아웃 상태");
//			return "redirect:/member/login"; //컨트롤러의 메서드를 호출 후에 JSP로
			return "member/login";
		}

	}

}
